{
  "swagger": "2.0",
  "info": {
    "title": "Web API - V1",
    "version": "v1"
  },
  "paths": {
    "/api/v1/auth": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Autentica um usuário com base no nome de usuário e senha fornecidos.",
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "description": "Nome de usuário.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "password",
            "description": "Senha.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/employee": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Adiciona um novo funcionário.",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "Name",
            "description": "Obtém ou define o nome do funcionário.",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Age",
            "description": "Obtém ou define a idade do funcionário.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Photo",
            "description": "Obtém ou define a foto do funcionário.",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Obtém uma página de funcionários.",
        "parameters": [
          {
            "in": "query",
            "name": "pageNumber",
            "description": "O número da página.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "pageQuantity",
            "description": "A quantidade de funcionários por página.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/employee/{id}/download": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Faz o download da foto de um funcionário.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "O ID do funcionário.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/employee/{id}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Busca um funcionário pelo ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "O ID do funcionário.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/person": {
      "post": {
        "tags": [
          "Person"
        ],
        "summary": "Adiciona uma nova pessoa.",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Os dados da pessoa a serem adicionados.",
            "schema": {
              "$ref": "#/definitions/PersonViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/person/{id}": {
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Obtém uma pessoa pelo ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "O ID da pessoa.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Person"
        ],
        "summary": "Atualiza uma pessoa existente.",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "O ID da pessoa a ser atualizada.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Os novos dados da pessoa.",
            "schema": {
              "$ref": "#/definitions/PersonViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Person"
        ],
        "summary": "Exclui uma pessoa pelo ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "O ID da pessoa a ser excluída.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "definitions": {
    "PersonViewModel": {
      "description": "ViewModel para representar os dados de uma pessoa.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Obtém ou define o nome da pessoa.",
          "type": "string"
        },
        "age": {
          "format": "int32",
          "description": "Obtém ou define a idade da pessoa.",
          "type": "integer"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}